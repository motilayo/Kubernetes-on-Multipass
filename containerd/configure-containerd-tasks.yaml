- name: drain control plane nodes
  become: false
  delegate_to: localhost
  shell: "kubectl drain {{ inventory_hostname }} --ignore-daemonsets"

- name: stop kubelet
  shell: systemctl stop kubelet

- name: stop docker
  shell: systemctl disable docker.service --now
  register: stop_docker

- name: configure containerd pt.1
  shell: |
    cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
    overlay
    br_netfilter
    EOF

- name: configure containerd pt.2
  shell: modprobe overlay

- name: configure containerd pt.3
  shell: modprobe br_netfilter

- name: configure containerd pt.4
  shell: |
    cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    EOF

- name: configure containerd pt.5
  shell: sysctl --system

- name: create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: configure containerd pt.6
  shell: containerd config default | sudo tee /etc/containerd/config.toml

- name: configure containerd pt.7
  shell: systemctl restart containerd

- name: configure containerd pt.8
  shell: sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

- name: configure containerd pt.9
  shell: systemctl restart containerd

- name: configure kubelet extra args
  shell: sed -i 's|"$| --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock\"|g' /var/lib/kubelet/kubeadm-flags.env

- name: update node CRI
  become: false
  delegate_to: localhost
  shell: kubectl annotate node {{ inventory_hostname }} --overwrite  kubeadm.alpha.kubernetes.io/cri-socket=unix:///run/containerd/containerd.sock

- name: start kubelet
  shell: systemctl start kubelet

- name: create .kube directory
  become_user: ubuntu
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755
  register: kube_path
  when: "'control' in group_names"

- name: copy admin.conf to .kube dir
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{kube_path.path}}/config"
    remote_src: yes
    owner: ubuntu
  when: "'control' in group_names"

- name: copy admin.conf to local
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    flat: yes
  run_once: true
  when: "'control' in group_names"


- name: uncordon control plane nodes
  become: false
  delegate_to: localhost
  shell: "kubectl uncordon {{ inventory_hostname }}"

- name: Remove docker-ce & docker-ce-cli
  apt:
    name:
      - docker-ce
      - docker-ce-cli
    state: absent
  become: true

- name: delete cni0 due to coredns pod error
  shell: ip link delete cni0