#cloud-init

# create ssh passwordless user
users:
  - name: ubuntu
    home: /home/ubuntu
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - {{ public_key }}

# add apt source for kubernetes
apt:
  sources:
    kubernetes.list:
      source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      keyserver: keyserver.ubuntu.com
      keyid: 59FE0256827269DC81578F928B57C5C2836F4BEB
    docker.list:
      source: "deb https://download.docker.com/linux/ubuntu $RELEASE stable"
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

# install needed packages      
package_update: true
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg2
  - lsb-release
  - software-properties-common
  - [containerd.io, 1.6.4-1]
  - [kubeadm, 1.24.1-00]
  - [kubectl, 1.24.1-00]
  - [kubelet, 1.24.1-00]
  - kubernetes-cni

bootcmd:
  - sudo swapoff -a

# create files
write_files:
  - path: /etc/systemd/resolved.conf
    append: true
    content: |
      MulticastDNS=yes

  - path: /etc/systemd/system/mdns@.service
    content: |
      [Service]
      Type=oneshot
      ExecStart=/usr/bin/systemd-resolve --set-mdns=yes --interface=%i
      After=sys-subsystem-net-devices-%i.device

      [Install]
      WantedBy=sys-subsystem-net-devices-%i.device

  - path: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

  - path: /etc/sysctl.d/10-kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

  - path: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1

  - path: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10
      debug: true

  - path: /etc/default/kubelet 
    content: |
      KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint='unix:///run/containerd/containerd.sock'
                                                
  - path: /etc/containerd/config.toml
    content: |
      version = 2

      [plugins]
        [plugins."io.containerd.grpc.v1.cri".containerd]
          snapshotter = "overlayfs"
          [plugins."io.containerd.grpc.v1.cri".containerd.default_runtime]
            runtime_type = "io.containerd.runtime.v1.linux"
            runtime_engine = "/usr/bin/runc"
            runtime_root = ""
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                SystemdCgroup = true

runcmd:
  - sudo sysctl --system
  - sudo systemctl restart systemd-resolved.service
  - sudo systemctl start mdns@enp0s2.service
  - sudo systemctl enable mdns@enp0s2.service
  - sudo modprobe overlay
  - sudo modprobe br_netfilter

package_reboot_if_required: true