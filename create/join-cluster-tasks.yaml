---
- name: Hold kubeadm
  ansible.builtin.dpkg_selections:
    name: kubeadm
    selection: hold

- name: Hold kubectl
  ansible.builtin.dpkg_selections:
    name: kubectl
    selection: hold

- name: Hold kubelet
  ansible.builtin.dpkg_selections:
    name: kubelet
    selection: hold

- name: Kubeadm reset
  ansible.builtin.shell: kubeadm reset --force && kubeadm reset phase cleanup-node
- name: Create .kube directory
  become_user: ubuntu
  ansible.builtin.file:
    path: $HOME/.kube
    state: directory
    mode: "0755"
  register: kube_path
  when: "'control' in group_names"

- name: Get kubeadm certificate key
  ansible.builtin.command: kubeadm certs certificate-key
  register: CERT_KEY
  delegate_to: "{{ groups.control[0] }}"
  when: "'control' in group_names"

- name: Upload certificate
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs --certificate-key={{ CERT_KEY.stdout }}
  delegate_to: "{{ groups.control[0] }}"
  when: "'control' in group_names"

- name: Get join command for control plane nodes
  become: false
  ansible.builtin.command: kubeadm token create --print-join-command --certificate-key={{ CERT_KEY.stdout }}
  register: JOIN_COMMAND
  delegate_to: "{{ groups.control[0] }}"
  when: "'control' in group_names"

- name: Set facts join command
  ansible.builtin.set_fact:
    join_command: "{{ JOIN_COMMAND.stdout }}"
  when: "'control' in group_names"

- name: Get join command for worker nodes
  ansible.builtin.command: kubeadm token create --print-join-command
  register: JOIN_COMMAND
  delegate_to: "{{ groups.control[0] }}"
  when: "'worker' in group_names"

- name: Set facts join command
  ansible.builtin.set_fact:
    join_command: "{{ JOIN_COMMAND.stdout }}"
  when: "'worker' in group_names"

- name: Show join command
  ansible.builtin.debug:
    msg:
      - "{{ join_command }}"

- name: Join cluster
  ansible.builtin.command: "{{ join_command }}"
  register: join_cmd_output

- name: Show join cluster
  ansible.builtin.debug:
    msg:
      - "{{ join_cmd_output.stdout }}"
